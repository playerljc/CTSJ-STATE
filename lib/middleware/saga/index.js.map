{"version":3,"file":"index.js","sources":["middleware/saga/index.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nrequire(\"core-js/modules/es.array.concat\");\n\nrequire(\"core-js/modules/es.array.for-each\");\n\nrequire(\"core-js/modules/es.array.from\");\n\nrequire(\"core-js/modules/es.array.iterator\");\n\nrequire(\"core-js/modules/es.array.some\");\n\nrequire(\"core-js/modules/es.function.bind\");\n\nrequire(\"core-js/modules/es.map\");\n\nrequire(\"core-js/modules/es.object.assign\");\n\nrequire(\"core-js/modules/es.object.keys\");\n\nrequire(\"core-js/modules/es.object.to-string\");\n\nrequire(\"core-js/modules/es.object.values\");\n\nrequire(\"core-js/modules/es.promise\");\n\nrequire(\"core-js/modules/es.regexp.exec\");\n\nrequire(\"core-js/modules/es.string.iterator\");\n\nrequire(\"core-js/modules/es.string.search\");\n\nrequire(\"core-js/modules/es.string.split\");\n\nrequire(\"core-js/modules/esnext.map.delete-all\");\n\nrequire(\"core-js/modules/esnext.map.every\");\n\nrequire(\"core-js/modules/esnext.map.filter\");\n\nrequire(\"core-js/modules/esnext.map.find\");\n\nrequire(\"core-js/modules/esnext.map.find-key\");\n\nrequire(\"core-js/modules/esnext.map.includes\");\n\nrequire(\"core-js/modules/esnext.map.key-of\");\n\nrequire(\"core-js/modules/esnext.map.map-keys\");\n\nrequire(\"core-js/modules/esnext.map.map-values\");\n\nrequire(\"core-js/modules/esnext.map.merge\");\n\nrequire(\"core-js/modules/esnext.map.reduce\");\n\nrequire(\"core-js/modules/esnext.map.some\");\n\nrequire(\"core-js/modules/esnext.map.update\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _call = _interopRequireDefault(require(\"./call\"));\n\nvar _all = _interopRequireDefault(require(\"./all\"));\n\nvar _race = _interopRequireDefault(require(\"./race\"));\n\nvar _select = _interopRequireDefault(require(\"./select\"));\n\nvar _put = _interopRequireDefault(require(\"./put\"));\n\nvar _history = _interopRequireDefault(require(\"./history\"));\n\nvar _util = require(\"../../util\");\n\nvar _qs = require(\"../../util/qs\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/**\n * Saga\n * @class Saga\n * @classdesc Saga 提供模型和对模型处理的中间件\n */\nvar Saga = /*#__PURE__*/function () {\n  function Saga() {\n    (0, _classCallCheck2[\"default\"])(this, Saga);\n\n    /**\n     * 存放所有模型\n      一个模型的结构如下\n      {\n        namespace\n        {\n          namespace: String\n          effects: Object\n          state: Object\n          reducers: Object\n        }\n      }\n     * @type {Map<any, any>}\n     */\n    this.models = new Map();\n    this.history = _history[\"default\"];\n  }\n  /**\n   * setStore - 设置store\n   * @param store\n   */\n\n\n  (0, _createClass2[\"default\"])(Saga, [{\n    key: \"setStore\",\n    value: function setStore(store) {\n      this.store = store;\n\n      if (!this.store.state.loading) {\n        // 初始化store的loading\n        this.store.state.loading = {\n          // 全局的loading默认为false\n          global: false\n        };\n      }\n    }\n    /**\n     * setRouter - 设置React\n     * @param router\n     */\n\n  }, {\n    key: \"setRouter\",\n    value: function setRouter(router) {\n      var self = this;\n      this.router = router;\n      var srcListen = self.router.history.listen.bind(self.router.history); // 对history的listener进行重写\n\n      this.router.history.listen = function (it) {\n        // 上来就调用一次listener的回调\n        it(_objectSpread(_objectSpread({}, {\n          pathname: window.location.pathname,\n          search: window.location.search,\n          query: (0, _qs.parse)()\n        }), {}, {\n          state: _objectSpread({}, self.store.state)\n        }));\n        srcListen(function (params) {\n          it(_objectSpread(_objectSpread({}, params || {}), {}, {\n            state: _objectSpread({}, self.store.state)\n          }));\n        });\n      }; // 设置所有model的subscriptions的setup\n\n\n      self.router.history = Array.from(self.models.values()).forEach(function (model) {\n        if ('subscriptions' in model && (0, _util.isObject)(model.subscriptions)) {\n          if ('setup' in model.subscriptions && (0, _util.isFunction)(model.subscriptions.setup)) {\n            model.subscriptions.setup({\n              history: self.router.history,\n              dispatch: self.store.dispatch.bind(self.store)\n            });\n          }\n        }\n      });\n    }\n    /**\n     * model - 添加一个model\n     * @param model\n     * @return {boolean}\n     */\n\n  }, {\n    key: \"model\",\n    value: function model(_model) {\n      if (!_model) return false;\n      this.clearUnSubscriptions(_model);\n      this.models.set(_model.namespace, _model);\n      this.init(_model);\n      return true;\n    }\n    /**\n     * unmodel - 注销一个model\n     * @param namespace\n     */\n\n  }, {\n    key: \"unmodel\",\n    value: function unmodel(namespace) {\n      var model = this.models.get(namespace);\n\n      if (model) {\n        this.clearUnSubscriptions(model);\n        this.models[\"delete\"](namespace);\n        delete this.store.state[namespace];\n      }\n    }\n    /**\n     * hasModel - 是否有指定model\n     * @param namespace\n     * @return {boolean}\n     */\n\n  }, {\n    key: \"hasModel\",\n    value: function hasModel(namespace) {\n      return !!this.models.get(namespace);\n    }\n    /**\n     * replacemodal - 替换一个model\n     * @param model\n     */\n\n  }, {\n    key: \"replaceModel\",\n    value: function replaceModel(model) {\n      return this.model(model);\n    }\n    /**\n     * getModel - 获取Model\n     * @param namespace\n     * @return Model\n     */\n\n  }, {\n    key: \"getModel\",\n    value: function getModel(namespace) {\n      return this.models.get(namespace);\n    }\n    /**\n     * run - 运行generator(迭代model的effects)\n     * @param g - 生成器函数类\n     // * @param state - store的state (dispatch调用则是全局，如果在effects中使用put调用则是model中的state)\n     * @param params - action的参数\n     * @param model - 模型\n     */\n\n  }, {\n    key: \"run\",\n    value: function run(_ref) {\n      var _this = this;\n\n      var g = _ref.g,\n          params = _ref.params,\n          model = _ref.model;\n      return new Promise(function (resolve, reject) {\n        // 生成器函数\n        var generator = g(params, {\n          call: _call[\"default\"],\n          all: _all[\"default\"],\n          race: _race[\"default\"],\n          // 这块应该传入所有model的state数据，而不是store的state数据\n          select: (0, _select[\"default\"])(_this\n          /* state */\n          ),\n          put: _put[\"default\"].call(_this, {\n            // state: state[model.namespace],\n            // 全局的store\n            store: _this.store,\n            params: params,\n            model: model,\n            // model,\n            run: _this.run.bind(_this)\n          }) // tack: null,\n\n        });\n        /**\n         * task\n         * @param data\n         */\n\n        function next(data) {\n          return new Promise(function (s, e) {\n            /**\n             * sucess\n             * @param beginParams\n             */\n            function nextBegin(beginParams) {\n              next(beginParams).then(function (result) {\n                s(result);\n              })[\"catch\"](function (err) {\n                generator[\"throw\"](err);\n                e(err);\n              });\n            }\n            /**\n             * 拿一个(迭代)\n             * call\n             * put\n             * select\n             */\n\n\n            var _generator$next = generator.next(data),\n                value = _generator$next.value,\n                done = _generator$next.done; // 没结束\n\n\n            if (!done) {\n              if (value instanceof Promise) {\n                value.then(function (res) {\n                  nextBegin(res);\n                })[\"catch\"](function (err) {\n                  generator[\"throw\"](err);\n                  e(err);\n                });\n              } else {\n                nextBegin(value);\n              }\n            } // 结束了\n            else {\n                s(value);\n              }\n          });\n        }\n\n        next().then(function (result) {\n          // 所有任务都完成\n          resolve(result);\n        })[\"catch\"](function () {\n          reject();\n        });\n      });\n    } // /**\n    //  * initSubscriptions\n    //  * @param model\n    //  */\n    // initSubscriptions(model) {\n    //   const { subscriptions = {} } = model;\n    //   if (subscriptions) {\n    //     const values = Object.values(subscriptions);\n    //     values.forEach((v) => {\n    //       v({\n    //         dispatch: this.store.dispatch,\n    //         history: this.history,\n    //       });\n    //     });\n    //   }\n    // }\n\n    /**\n     * clearUnSubscriptions\n     * @param model\n     */\n\n  }, {\n    key: \"clearUnSubscriptions\",\n    value: function clearUnSubscriptions(model) {\n      var _model$unsubscription = model.unsubscriptions,\n          unsubscriptions = _model$unsubscription === void 0 ? {} : _model$unsubscription;\n\n      if (unsubscriptions) {\n        var values = Object.values(unsubscriptions);\n        values.forEach(function (v) {\n          v();\n        });\n      }\n    }\n    /**\n     * init - 初始化所有model的state数据到store中\n     * @param model - 一个model\n     */\n\n  }, {\n    key: \"init\",\n    value: function init(model) {\n      var namespace = model.namespace,\n          state = model.state; // model中所有effect的loading值\n\n      var modelEffectsLoading = {};\n      var effectsKeys = Object.keys(model.effects); // 迭代一个model中的所有effect\n\n      effectsKeys.forEach(function (k) {\n        // key -> namespace/effect的名字\n        modelEffectsLoading[\"\".concat(namespace, \"/\").concat(k)] = false;\n      }); // /namespace/effects1 = false\n      // /namespace/effects2 = false\n      // /namespace/effects3 = false\n\n      Object.assign(this.store.state.loading, modelEffectsLoading); // this.store.state.loading = modelEffectsLoading;\n      // 在全局store中初始化model的数据\n\n      this.store.state[namespace] = [namespace] in this.store.state ? this.store.state[namespace] : state; // Object.assign(this.store.state, {\n      //   loading: Object.assign(this.store.state.loading || { global: false }, modelEffectsLoading),\n      //   [namespace]: [namespace] in this.store.state ? this.store.state[namespace] : state,\n      // });\n      // this.initSubscriptions(model);\n    }\n    /**\n     * isGlobalLoading\n     * @return {boolean}\n     */\n\n  }, {\n    key: \"isGlobalLoading\",\n    value: function isGlobalLoading()\n    /* model */\n    {\n      var loading = this.store.state.loading;\n      return Array.from(this.models).some(function (_ref2) {\n        var _ref3 = (0, _slicedToArray2[\"default\"])(_ref2, 2),\n            namespace = _ref3[0],\n            model = _ref3[1];\n\n        // const { namespace } = model;\n        return Array.from(Object.keys(model.effects)).some(function (key) {\n          var curType = \"\".concat(namespace, \"/\").concat(key);\n          return loading[curType] === true;\n        });\n      }); // console.log('flag', flag);\n      // return flag;\n      // let globalLoading = false;\n      // const { loading } = this.store.state;\n      // for (const key of effectsKeys) {\n      //   const curType = `${namespace}/${key}`;\n      //   if (curType !== type) {\n      //     if (loading[curType]) {\n      //       globalLoading = true;\n      //     }\n      //   }\n      // }\n      // return globalLoading;\n    }\n    /**\n     * before - saga中间件的before方法\n     * @param state - store的数据\n     * @param action - 事务\n     * @return Promise\n     */\n\n  }, {\n    key: \"before\",\n    value: function before(_ref4) {\n      var _this2 = this;\n\n      var state = _ref4.state,\n          action = _ref4.action;\n      return new Promise(function (resolve) {\n        // 获取action中的type\n        var type = action.type; // 根据type获取namespace和effect\n\n        var _type$split = type.split('/'),\n            _type$split2 = (0, _slicedToArray2[\"default\"])(_type$split, 2),\n            namespace = _type$split2[0],\n            effect = _type$split2[1]; // 根据命名空间获取model\n\n\n        var model = _this2.models.get(namespace); // 如果存在model\n\n\n        if (model) {\n          // 获取effects的g g是一个生成器函数或者是一个reducer\n          var g = model.effects[effect]; // 如果是effect\n\n          if (g) {\n            // saga的before中修改了state的loading\n            state.loading[type] = true;\n            state.loading.global = true; // console.log('before', type, state.loading[type]);\n            // console.log('before', 'global', state.loading.global);\n          }\n\n          resolve(state);\n        } else {\n          resolve(state);\n        } // resolve(\n        //   Object.assign(state, {\n        //     loading: Object.assign(state.loading, {\n        //       global: true,\n        //       [type]: true,\n        //     }),\n        //   })\n        // );\n        // resolve(state);\n\n      });\n    }\n    /**\n     * after\n     * @param state - store的数据\n     * @param action\n     * @return Promise\n     */\n\n  }, {\n    key: \"after\",\n    value: function after(_ref5) {\n      var _this3 = this;\n\n      var state = _ref5.state,\n          action = _ref5.action;\n      return new Promise(function (resolve) {\n        // 类型，实例，和回调\n        var type = action.type,\n            ins = action.ins,\n            success = action.success,\n            params = (0, _objectWithoutProperties2[\"default\"])(action, [\"type\", \"ins\", \"success\"]); // 根据type获取namespace和effect\n\n        var _type$split3 = type.split('/'),\n            _type$split4 = (0, _slicedToArray2[\"default\"])(_type$split3, 2),\n            namespace = _type$split4[0],\n            effect = _type$split4[1]; // 根据命名空间获取model\n\n\n        var model = _this3.models.get(namespace);\n\n        if (model) {\n          // 获取effects的g g是一个生成器函数\n          var g = model.effects[effect]; // 如果是effect\n\n          if (g) {\n            // 迭代model的effects,这里的state是全局的state\n            _this3.run({\n              g: g,\n              state: state,\n              params: params,\n              model: model\n            }).then(function (result) {\n              // model的返回\n              // TODO: 将在模型中改变的state同步到全局store的state中\n              // loading变成false\n              state.loading[type] = false; // 将在模型中改变的state同步到全局store的state中\n\n              state[namespace] = model.state;\n              state.loading.global = _this3.isGlobalLoading(); // console.log('after', 'effect', type, state.loading[type]);\n              // console.log('after', 'effect', 'global', state.loading.global);\n              // const result = Object.assign(state, {\n              //   [namespace]: model.state,\n              //   loading: Object.assign(this.store.state.loading, {\n              //     global: this.isGlobalLoading(model, type),\n              //     [type]: false,\n              //   }),\n              // });\n\n              resolve(result);\n            });\n          } // 如果是reducer\n          else if (model.reducers[effect]) {\n              // 是reducers\n              model.state = model.reducers[effect](state[namespace], {\n                payload: params\n              }); // TODO: 将在模型中改变的state同步到全局store的state中\n\n              state[namespace] = model.state; // state.loading[type] = false;\n              // state.loading.global = this.isGlobalLoading(model);\n              // console.log('after', 'reducers', type, state.loading[type]);\n              // console.log('after', 'reducers', 'global', state.loading.global);\n\n              resolve(state);\n            }\n        } else {\n          // 没有model的返回\n          resolve(state);\n        }\n      });\n    }\n  }]);\n  return Saga;\n}();\n\nvar _default = function _default() {\n  return new Saga();\n};\n\nexports[\"default\"] = _default;"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","_objectWithoutProperties2","_slicedToArray2","_defineProperty2","_classCallCheck2","_createClass2","_call","_all","_race","_select","_put","_history","_util","_qs","ownKeys","object","enumerableOnly","symbols","keys","getOwnPropertySymbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","Saga","this","models","Map","history","store","state","loading","global","router","self","srcListen","listen","bind","it","pathname","window","location","search","query","parse","params","Array","from","values","model","isObject","subscriptions","isFunction","setup","dispatch","_model","clearUnSubscriptions","set","namespace","init","get","_ref","_this","g","Promise","resolve","reject","generator","call","all","race","select","put","run","next","data","s","e","nextBegin","beginParams","then","result","err","_generator$next","done","res","_model$unsubscription","unsubscriptions","v","modelEffectsLoading","effects","k","concat","assign","some","_ref2","_ref3","curType","_ref4","_this2","action","type","_type$split","split","_type$split2","effect","_ref5","_this3","ins","success","_type$split3","_type$split4","isGlobalLoading","reducers","payload","_default"],"mappings":"aAEA,IAAIA,uBAAyBC,QAAQ,gDAErCA,QAAQ,mCAERA,QAAQ,qCAERA,QAAQ,iCAERA,QAAQ,qCAERA,QAAQ,iCAERA,QAAQ,oCAERA,QAAQ,0BAERA,QAAQ,oCAERA,QAAQ,kCAERA,QAAQ,uCAERA,QAAQ,oCAERA,QAAQ,8BAERA,QAAQ,kCAERA,QAAQ,sCAERA,QAAQ,oCAERA,QAAQ,mCAERA,QAAQ,yCAERA,QAAQ,oCAERA,QAAQ,qCAERA,QAAQ,mCAERA,QAAQ,uCAERA,QAAQ,uCAERA,QAAQ,qCAERA,QAAQ,uCAERA,QAAQ,yCAERA,QAAQ,oCAERA,QAAQ,qCAERA,QAAQ,mCAERA,QAAQ,qCAERA,QAAQ,gDAERA,QAAQ,gDAERC,OAAOC,eAAeC,QAAS,aAAc,CAC3CC,OAAO,IAETD,QAAiB,aAAI,EAErB,IAAIE,0BAA4BN,uBAAuBC,QAAQ,mDAE3DM,gBAAkBP,uBAAuBC,QAAQ,yCAEjDO,iBAAmBR,uBAAuBC,QAAQ,0CAElDQ,iBAAmBT,uBAAuBC,QAAQ,0CAElDS,cAAgBV,uBAAuBC,QAAQ,uCAE/CU,MAAQX,uBAAuBC,QAAQ,WAEvCW,KAAOZ,uBAAuBC,QAAQ,UAEtCY,MAAQb,uBAAuBC,QAAQ,WAEvCa,QAAUd,uBAAuBC,QAAQ,aAEzCc,KAAOf,uBAAuBC,QAAQ,UAEtCe,SAAWhB,uBAAuBC,QAAQ,cAE1CgB,MAAQhB,QAAQ,cAEhBiB,IAAMjB,QAAQ,iBAElB,SAASkB,QAAQC,EAAQC,GAAkB,IAAwEC,EAApEC,EAAOrB,OAAOqB,KAAKH,GAAqQ,OAAxPlB,OAAOsB,wBAA6BF,EAAUpB,OAAOsB,sBAAsBJ,GAAaC,IAAgBC,EAAUA,EAAQG,OAAO,SAAUC,GAAO,OAAOxB,OAAOyB,yBAAyBP,EAAQM,GAAKE,cAAgBL,EAAKM,KAAKC,MAAMP,EAAMD,IAAmBC,EAE9U,SAASQ,cAAcC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAAQA,EAAI,EAAKd,QAAQjB,OAAOkC,IAAS,GAAMC,QAAQ,SAAUC,IAAO,EAAI9B,iBAA0B,SAAGwB,EAAQM,EAAKF,EAAOE,MAAsBpC,OAAOqC,0BAA6BrC,OAAOsC,iBAAiBR,EAAQ9B,OAAOqC,0BAA0BH,IAAmBjB,QAAQjB,OAAOkC,IAASC,QAAQ,SAAUC,GAAOpC,OAAOC,eAAe6B,EAAQM,EAAKpC,OAAOyB,yBAAyBS,EAAQE,MAAe,OAAON,EAO9hB,IAAIS,KAAoB,WACtB,SAASA,KACP,EAAIhC,iBAA0B,SAAGiC,KAAMD,GAgBvCC,KAAKC,OAAS,IAAIC,IAClBF,KAAKG,QAAU7B,SAAkB,QAmcnC,OA3bA,EAAIN,cAAuB,SAAG+B,EAAM,CAAC,CACnCH,IAAK,WACLjC,MAAO,SAAkByC,GACvBJ,KAAKI,MAAQA,EAERJ,KAAKI,MAAMC,MAAMC,UAEpBN,KAAKI,MAAMC,MAAMC,QAAU,CAEzBC,QAAQ,MASb,CACDX,IAAK,YACLjC,MAAO,SAAmB6C,GACxB,IAAIC,EAAOT,KACXA,KAAKQ,OAASA,EACd,IAAIE,EAAYD,EAAKD,OAAOL,QAAQQ,OAAOC,KAAKH,EAAKD,OAAOL,SAE5DH,KAAKQ,OAAOL,QAAQQ,OAAS,SAAUE,GAErCA,EAAGxB,cAAcA,cAAc,GAAI,CACjCyB,SAAUC,OAAOC,SAASF,SAC1BG,OAAQF,OAAOC,SAASC,OACxBC,OAAO,EAAI1C,IAAI2C,WACb,GAAI,CACNd,MAAOhB,cAAc,GAAIoB,EAAKL,MAAMC,UAEtCK,EAAU,SAAUU,GAClBP,EAAGxB,cAAcA,cAAc,GAAI+B,GAAU,IAAK,GAAI,CACpDf,MAAOhB,cAAc,GAAIoB,EAAKL,MAAMC,aAM1CI,EAAKD,OAAOL,QAAUkB,MAAMC,KAAKb,EAAKR,OAAOsB,UAAU5B,QAAQ,SAAU6B,GACnE,kBAAmBA,IAAS,EAAIjD,MAAMkD,UAAUD,EAAME,gBACpD,UAAWF,EAAME,gBAAiB,EAAInD,MAAMoD,YAAYH,EAAME,cAAcE,QAC9EJ,EAAME,cAAcE,MAAM,CACxBzB,QAASM,EAAKD,OAAOL,QACrB0B,SAAUpB,EAAKL,MAAMyB,SAASjB,KAAKH,EAAKL,aAYjD,CACDR,IAAK,QACLjC,MAAO,SAAemE,GACpB,QAAKA,IACL9B,KAAK+B,qBAAqBD,GAC1B9B,KAAKC,OAAO+B,IAAIF,EAAOG,UAAWH,GAClC9B,KAAKkC,KAAKJ,IACH,KAOR,CACDlC,IAAK,UACLjC,MAAO,SAAiBsE,GACtB,IAAIT,EAAQxB,KAAKC,OAAOkC,IAAIF,GAExBT,IACFxB,KAAK+B,qBAAqBP,GAC1BxB,KAAKC,OAAe,OAAEgC,UACfjC,KAAKI,MAAMC,MAAM4B,MAS3B,CACDrC,IAAK,WACLjC,MAAO,SAAkBsE,GACvB,QAASjC,KAAKC,OAAOkC,IAAIF,KAO1B,CACDrC,IAAK,eACLjC,MAAO,SAAsB6D,GAC3B,OAAOxB,KAAKwB,MAAMA,KAQnB,CACD5B,IAAK,WACLjC,MAAO,SAAkBsE,GACvB,OAAOjC,KAAKC,OAAOkC,IAAIF,KAUxB,CACDrC,IAAK,MACLjC,MAAO,SAAayE,GAClB,IAAIC,EAAQrC,KAERsC,EAAIF,EAAKE,EACTlB,EAASgB,EAAKhB,OACdI,EAAQY,EAAKZ,MACjB,OAAO,IAAIe,QAAQ,SAAUC,EAASC,GAEpC,IAAIC,EAAYJ,EAAElB,EAAQ,CACxBuB,KAAM1E,MAAe,QACrB2E,IAAK1E,KAAc,QACnB2E,KAAM1E,MAAe,QAErB2E,QAAQ,EAAI1E,QAAiB,SAAGiE,GAGhCU,IAAK1E,KAAc,QAAEsE,KAAKN,EAAO,CAG/BjC,MAAOiC,EAAMjC,MACbgB,OAAQA,EACRI,MAAOA,EAEPwB,IAAKX,EAAMW,IAAIpC,KAAKyB,QASxB,SAASY,EAAKC,GACZ,OAAO,IAAIX,QAAQ,SAAUY,EAAGC,GAK9B,SAASC,EAAUC,GACjBL,EAAKK,GAAaC,KAAK,SAAUC,GAC/BL,EAAEK,KACM,MAAE,SAAUC,GACpBf,EAAiB,MAAEe,GACnBL,EAAEK,KAWN,IAAIC,EAAkBhB,EAAUO,KAAKC,GACjCvF,EAAQ+F,EAAgB/F,MACjB+F,EAAgBC,KAgBvBR,EAAExF,GAZAA,aAAiB4E,QACnB5E,EAAM4F,KAAK,SAAUK,GACnBP,EAAUO,KACF,MAAE,SAAUH,GACpBf,EAAiB,MAAEe,GACnBL,EAAEK,KAGJJ,EAAU1F,MASlBsF,GAAOM,KAAK,SAAUC,GAEpBhB,EAAQgB,KACA,MAAE,WACVf,UAyBL,CACD7C,IAAK,uBACLjC,MAAO,SAA8B6D,GAC/BqC,EAAwBrC,EAAMsC,gBAC9BA,OAA4C,IAA1BD,EAAmC,GAAKA,EAE1DC,GACWtG,OAAO+D,OAAOuC,GACpBnE,QAAQ,SAAUoE,GACvBA,QASL,CACDnE,IAAK,OACLjC,MAAO,SAAc6D,GACnB,IAAIS,EAAYT,EAAMS,UAClB5B,EAAQmB,EAAMnB,MAEd2D,EAAsB,GACRxG,OAAOqB,KAAK2C,EAAMyC,SAExBtE,QAAQ,SAAUuE,GAE5BF,EAAoB,GAAGG,OAAOlC,EAAW,KAAKkC,OAAOD,KAAM,IAK7D1G,OAAO4G,OAAOpE,KAAKI,MAAMC,MAAMC,QAAS0D,GAGxChE,KAAKI,MAAMC,MAAM4B,GAAa,CAACA,KAAcjC,KAAKI,MAAMC,MAAQL,KAAKI,MAAMC,MAAM4B,GAAa5B,IAW/F,CACDT,IAAK,kBACLjC,MAAO,WAGL,IAAI2C,EAAUN,KAAKI,MAAMC,MAAMC,QAC/B,OAAOe,MAAMC,KAAKtB,KAAKC,QAAQoE,KAAK,SAAUC,GAC5C,IAAIC,GAAQ,EAAI1G,gBAAyB,SAAGyG,EAAO,GAC/CrC,EAAYsC,EAAM,GAClB/C,EAAQ+C,EAAM,GAGlB,OAAOlD,MAAMC,KAAK9D,OAAOqB,KAAK2C,EAAMyC,UAAUI,KAAK,SAAUzE,GACvD4E,EAAU,GAAGL,OAAOlC,EAAW,KAAKkC,OAAOvE,GAC/C,OAA4B,IAArBU,EAAQkE,SAuBpB,CACD5E,IAAK,SACLjC,MAAO,SAAgB8G,GACrB,IAAIC,EAAS1E,KAETK,EAAQoE,EAAMpE,MACdsE,EAASF,EAAME,OACnB,OAAO,IAAIpC,QAAQ,SAAUC,GAE3B,IAAIoC,EAAOD,EAAOC,KAEdC,EAAcD,EAAKE,MAAM,KACzBC,GAAe,EAAIlH,gBAAyB,SAAGgH,EAAa,GAC5D5C,EAAY8C,EAAa,GACzBC,EAASD,EAAa,GAGtBvD,EAAQkD,EAAOzE,OAAOkC,IAAIF,GAG1BT,GAEMA,EAAMyC,QAAQe,KAIpB3E,EAAMC,QAAQsE,IAAQ,EACtBvE,EAAMC,QAAQC,QAAS,GAIzBiC,EAAQnC,OAsBb,CACDT,IAAK,QACLjC,MAAO,SAAesH,GACpB,IAAIC,EAASlF,KAETK,EAAQ4E,EAAM5E,MACdsE,EAASM,EAAMN,OACnB,OAAO,IAAIpC,QAAQ,SAAUC,GAE3B,IAAIoC,EAAOD,EAAOC,KAGdxD,GAFMuD,EAAOQ,IACHR,EAAOS,SACR,EAAIxH,0BAAmC,SAAG+G,EAAQ,CAAC,OAAQ,MAAO,aAE3EU,EAAeT,EAAKE,MAAM,KAC1BQ,GAAe,EAAIzH,gBAAyB,SAAGwH,EAAc,GAC7DpD,EAAYqD,EAAa,GACzBN,EAASM,EAAa,GAGtB9D,EAAQ0D,EAAOjF,OAAOkC,IAAIF,GAE1BT,GAEEc,EAAId,EAAMyC,QAAQe,IAIpBE,EAAOlC,IAAI,CACTV,EAAGA,EACHjC,MAAOA,EACPe,OAAQA,EACRI,MAAOA,IACN+B,KAAK,SAAUC,GAIhBnD,EAAMC,QAAQsE,IAAQ,EAEtBvE,EAAM4B,GAAaT,EAAMnB,MACzBA,EAAMC,QAAQC,OAAS2E,EAAOK,kBAU9B/C,EAAQgB,KAGHhC,EAAMgE,SAASR,KAEpBxD,EAAMnB,MAAQmB,EAAMgE,SAASR,GAAQ3E,EAAM4B,GAAY,CACrDwD,QAASrE,IAGXf,EAAM4B,GAAaT,EAAMnB,MAKzBmC,EAAQnC,IAIZmC,EAAQnC,SAKTN,EAtde,GAydpB2F,SAAW,WACb,OAAO,IAAI3F,MAGbrC,QAAiB,QAAIgI"}