{"version":3,"file":"put.js","sources":["middleware/saga/put.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nrequire(\"core-js/modules/es.regexp.exec\");\n\nrequire(\"core-js/modules/es.string.split\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _default;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\n// /**\n//  * put - 使用put可以调用任意model中的effect和reducer\n//  * @param store\n//  // * @param params\n//  // * @param model\n//  * @param run\n//  * @return {Function}\n//  */\n// export default ({ store, /* params, model, */ run }) => ({ type, ...other }) => {\n//   // effects和reducers都已调用\n//   // const { effects, reducers } = model;\n//\n//   // type是namespace/xxxx\n//\n//\n//   // 如果是effect\n//   if (effects[type]) {\n//     // 如果调用的是effect，这里的state是model中的state\n//     return run({ g: effects[type], state: store.state[model.namespace], params, model });\n//     // 如果调用的是reducer\n//   }\n//   // 如果是reduce\n//   if (reducers[type]) {\n//     model.state = reducers[type](store.state[model.namespace], other);\n//     return model.state;\n//   }\n// };\n\n/**\n * put - 使用put可以调用任意model中的effect和reducer\n * @param store - 全局的数据\n * @param params - action的参数\n * @param run - 执行effect的函数\n * @param model - 数据的模型\n * @return {Function}\n */\nfunction _default(_ref) {\n  var params = _ref.params,\n      run = _ref.run,\n      model = _ref.model;\n  var saga = this; // eslint-disable-next-line consistent-return\n\n  return function (_ref2) {\n    var type = _ref2.type,\n        other = (0, _objectWithoutProperties2[\"default\"])(_ref2, [\"type\"]);\n    var curModel;\n    var curType; // 如果没有/说明调用的是当前model中的effect或reducer\n\n    if (type.split('/').length === 1) {\n      curModel = model;\n      curType = type;\n    } // 调用的是其他namespace中的effect和reducer\n    else {\n        // 这里的type是namespace/[effect|reducer]\n        var _type$split = type.split('/'),\n            _type$split2 = (0, _slicedToArray2[\"default\"])(_type$split, 2),\n            namespace = _type$split2[0],\n            name = _type$split2[1]; // 获取model\n\n\n        curModel = saga.getModel(namespace);\n        curType = name;\n      } // 获取model中的effects和reducers\n\n\n    var _curModel = curModel,\n        effects = _curModel.effects,\n        reducers = _curModel.reducers; // 如果是effect\n\n    if (effects[curType]) {\n      // 如果调用的是effect，这里的state是model中的state\n      return run({\n        g: effects[curType],\n        params: params,\n        model: curModel\n      }); // 如果调用的是reducer\n    } // 如果是reduce\n\n\n    if (reducers[curType]) {\n      curModel.state = reducers[curType]( // 之前初始值用的是store中model的数据，而现在修改为使用model的state\n      // 原因是因为这个时候model的数据还没有同步到store的model中\n      curModel.state || {}\n      /* store.state[curModel.namespace] */\n      , other);\n      return curModel.state;\n    }\n  };\n}"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","_default","_slicedToArray2","_objectWithoutProperties2","_ref","params","run","model","saga","this","_ref2","curModel","curType","type","other","split","length","_type$split","namespace","_type$split2","name","getModel","effects","reducers","g","state"],"mappings":"aAEA,IAAIA,uBAAyBC,QAAQ,gDAErCA,QAAQ,kCAERA,QAAQ,mCAERC,OAAOC,eAAeC,QAAS,aAAc,CAC3CC,OAAO,IAETD,QAAiB,QAAIE,SAErB,IAAIC,gBAAkBP,uBAAuBC,QAAQ,yCAEjDO,0BAA4BR,uBAAuBC,QAAQ,mDAsC/D,SAASK,SAASG,GAChB,IAAIC,EAASD,EAAKC,OACdC,EAAMF,EAAKE,IACXC,EAAQH,EAAKG,MACbC,EAAOC,KAEX,OAAO,SAAUC,GACf,IAiBIC,EACAC,EAlBAC,EAAOH,EAAMG,KACbC,GAAQ,EAAIX,0BAAmC,SAAGO,EAAO,CAAC,SAM5DE,EAF6B,IAA3BC,EAAKE,MAAM,KAAKC,QAClBL,EAAWJ,EACDM,IAIJI,EAAcJ,EAAKE,MAAM,KAEzBG,GADAC,GAAe,EAAIjB,gBAAyB,SAAGe,EAAa,IACnC,GACzBG,EAAOD,EAAa,GAGxBR,EAAWH,EAAKa,SAASH,GACfE,GAId,IACIE,EADYX,EACQW,QACpBC,EAFYZ,EAESY,SAEzB,OAAID,EAAQV,GAEHN,EAAI,CACTkB,EAAGF,EAAQV,GACXP,OAAQA,EACRE,MAAOI,IAKPY,EAASX,IACXD,EAASc,MAAQF,EAASX,GAE1BD,EAASc,OAAS,GAEhBX,GACKH,EAASc,YANlB"}